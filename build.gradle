/*
 * Copyright 2022 WangCai.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.time.Year
import java.time.ZoneId

plugins {
	id 'java'
	id 'maven-publish'
	// https://plugins.gradle.org/plugin/com.diffplug.spotless
	id "com.diffplug.spotless" version "6.9.0"
}

group 'cn.xusc'
version = new Version(major: 2, minor: 5, revision: 0, snapshot: true)

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_11

compileJava.options.encoding = compileTestJava.options.encoding = "UTF-8"

repositories {
	// 优先本地仓库加载
	mavenLocal()
	// 阿里云中央仓库加载
	maven { url 'https://maven.aliyun.com/repository/public/' }
	maven { url 'https://maven.aliyun.com/repository/spring/' }
	// 默认的中央仓库加载
	mavenCentral()
}

dependencies {
	// 高性能的队列
	implementation 'com.lmax:disruptor:3.4.4'
	// Java最好的JSON解析器
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
	// 简化java对象代码，增加可读性
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	testImplementation 'org.mockito:mockito-core:4.7.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
	useJUnitPlatform()
}

// 增加javadoc和源代码jar的生成
java {
	withJavadocJar()
	withSourcesJar()
}

// javadoc配置
javadoc {
	title = 'Trace-Recorder'

	options.encoding = "UTF-8"
	options.author = true
	options.bottom = "<i>Copyright &#169; 2022 - ${Year.now(ZoneId.of("Asia/Shanghai"))} WangCai. All Rights Reserved.</i>"
	options.use = true
	options.version = true
	options.showFromPublic()
}

// spotless配置
spotless {
	format 'misc', {
		target '*.gradle', '*.md', '.gitignore'

		// 修剪后面空格
		trimTrailingWhitespace()
		// 使用tab制表符进行缩进
		indentWithTabs()
		// 末尾使用新行结束
		endWithNewline()
	}
	java {
		// 确保不改变其它文件（apache）的内容
		target project.fileTree(project.rootDir) {
			include '**/*.java'
			exclude '**/util/FastList.java',
					'**/util/AntPathMatcher.java'
		}

		// 导入排序
		importOrder()
		// 移除未使用的导入
		removeUnusedImports()

		// 许可头文件
		licenseHeaderFile './LICENSEHEADER'
		// https://www.npmjs.com/package/prettier
		// https://www.npmjs.com/package/prettier-plugin-java
		prettier(['prettier': '2.7.1', 'prettier-plugin-java': '1.6.2']).config([
				'parser'    : 'java',
				'tabWidth'  : 4,
				'printWidth': 120,
				'endOfLine' : 'lf'
		])
	}
	// spotlessJava -> spotlessMisc
	spotlessMisc.dependsOn(spotlessJava)
}

// git 提交前钩子任务
task preCommit() {
	try {
		// GitHook pre-commit (spotless, spotbugs)
		def hook = new File("$rootProject.projectDir/.git/hooks/pre-commit")
		hook.text = """#!/bin/bash
		./gradlew spotlessCheck

		RESULT=\$?
		exit \$RESULT
		"""
		hook.setExecutable(true)
	} catch (ignored) {
	}
}

// git 钩子任务组
task hooks() {
	preCommit
}

// 发行
publishing {
	publications {
		maven(MavenPublication) {
			groupId = "${group}"
			artifactId = 'trace-recorder'
			version = "${version}"

			from components.java
		}
	}
}

// 版本
class Version {
	int major, minor = 0, revision = 0
	boolean snapshot

	String toString() {
		"$major.$minor${revision == 0 ? '' : '.' + revision}${snapshot ? '-SNAPSHOT' : ''}"
	}
}
